var seeInActionFormId = "2585";
jQuery.expr[":"].contains = jQuery.expr.createPseudo(function (arg) {
  return function (elem) {
    return jQuery(elem).text().toUpperCase().indexOf(arg.toUpperCase()) >= 0;
  };
});
jQuery(document).on("ready", function () {
  jQuery(".syncari-form-content-wrapper-block .ajax-loader").remove();

  if (typeof mc4wp !== 'undefined') {
    mc4wp.forms.on("2525.success", function (form, data) {
      // your code goes here
      ga(
        "send",
        "event",
        "Forms",
        "Newsletter Form: Footer - " + jQuery(document).attr("title"),
        "Page Url",
        jQuery(location).attr("href")
      );

      jQuery(".newsletter-popup-body .form-content").slideUp(500, function () {
        jQuery(
          ".newsletter-popup-body  .newsletter-popup-thanks-body"
        ).slideDown();
      });
      jQuery(".newsletter-popup-footer .btn-link").hide();
      console.log("Form successfully submitted.");
    });
    mc4wp.forms.on("2498.success", function (form, data) {
      // your code goes here

      ga(
        "send",
        "event",
        "Forms",
        "Newsletter Form",
        "Page Name",
        jQuery(document).attr("title")
      );
      let targetElement = jQuery(".mc4wp-form-2498").closest(
        ".syncari-form-action-block"
      );
      let targetThanksElement = targetElement
        .next(".demo-action-thanks")
        .find(".syncari-form-thankyou-block");
      targetElement.slideUp(500, function () {
        targetThanksElement.slideDown();
      });
      console.log("Form successfully submitted.");
    });
    mc4wp.forms.on("2825.success", function (form, data) {
      // your code goes here

      ga(
        "send",
        "event",
        "Forms",
        "Newsletter Form",
        "Page Name",
        jQuery(document).attr("title")
      );
      let targetElement = jQuery(".mc4wp-form-2790").closest(
        ".syncari-form-action-block"
      );
      let targetThanksElement = targetElement
        .next(".demo-action-thanks")
        .find(".syncari-form-thankyou-block");
      targetElement
        .closest(".newsletter-form-block")
        .find(".hide-on-success")
        .slideUp(500, function () {
          targetThanksElement.slideDown();
        });
      console.log("Form successfully submitted.");
    });
  }
  jQuery(".hero-email-input-wrapper")
    .find(".wpcf7-response-output.wpcf7-display-none")
    .remove();
  jQuery(".hero-email-input-wrapper").on("focus", function () {
    jQuery(".hero-email-input-wrapper").removeClass();
  });
  jQuery("input.name-text-wrapper").keyup(
    libraryinputdelay(function (e) {
      connectorLibrarySearch(this.value);
    }, 500)
  );
  jQuery(".search-filter-position span.cross-icon").on("click", function () {
    jQuery("input.name-text-wrapper").val("");
    connectorLibrarySearch("");
  });
  jQuery(".search-filter-position span.search-icon").on("click", function () {
    connectorLibrarySearch(jQuery("input.name-text-wrapper").val());
  });
  jQuery(".library-filter-block .category-select-filter").on(
    "change",
    function () {
      let filterCategory = jQuery(this).val();
      //clear filter
      jQuery(`div.sync-synapse-list-item`).removeClass("category-filter-apply");
      if (filterCategory != "") {
        jQuery(`div.sync-synapse-tags:not(:contains('${filterCategory}'))`)
          .closest("div.sync-synapse-list-item")
          .addClass("category-filter-apply");
      }
    }
  );
  if(typeof thanksSearchval != "undefined"){
    jQuery(".sync-thank-you-section-3 .newsletter-form-container input[type='email'].form-control").val(thanksSearchval);
  }
});
function libraryinputdelay(fn, ms) {
  let timer = 0;
  return function (...args) {
    clearTimeout(timer);
    timer = setTimeout(fn.bind(this, ...args), ms || 0);
  };
}
function connectorLibrarySearch(inputVal) {
  //    console.log("Time elapsed!", inputVal);
  if (inputVal == "") {
    jQuery("div.sync-synapse-list-item").removeClass("d-none");
    jQuery(".search-filter-position span.cross-icon").addClass("d-none");
    jQuery(".search-filter-position span.search-icon").removeClass("d-none");
  } else {
    jQuery(`div.sync-synapse-list-item:not(:contains('${inputVal}'))`).addClass(
      "d-none"
    );
    jQuery(`div.sync-synapse-list-item:contains('${inputVal}')`).removeClass(
      "d-none"
    );
    jQuery(".search-filter-position span.cross-icon").removeClass("d-none");
    jQuery(".search-filter-position span.search-icon").addClass("d-none");
  }
}
// Example usage:

function cf7SuccessHandler(formDomClass, formId) {
  let formBlock = jQuery("#" + formDomClass);
  let errrorBlock = formBlock
    .closest(".syncari-form-action-block")
    .find(".syncari-form-error-block");
  errrorBlock.addClass("d-none");
  if (formBlock.closest(".hero-email-input-wrapper").length > 0) {
    formBlock
      .closest(".hero-email-input-wrapper")
      .removeClass("error-border-container");
    window.location =
      "/thank-you?e=" +
      jQuery(".hero-email-input-wrapper input:visible:first").val();
  }
  let formActionBlock = formBlock.closest(".syncari-form-action-block");
  formBlock.find(".wpcf7-response-output.wpcf7-display-none").remove();
  let thanksWrapper = formBlock
    .closest(".syncari-form-content-wrapper-block")
    .find(".syncari-form-thankyou-block");
  formActionBlock.slideUp(500, function () {
    thanksWrapper.slideDown(500);
  });
  let downloadButton = jQuery(".manual-download-ebook a");
  let FormName = "",
    galabel = "";

  if (formId == 1773) {
    FormName = "Download eBook";
    galabel = "Ebook Download";
  } else if (formId == 2682 || formId == 2714) {
    FormName = "Request Demo";
    galabel = "Demo Request - " + jQuery(document).attr("title");
  } else if (formId == 2618) {
    FormName = "Request Demo: see in action";
    galabel = "Demo Request - " + jQuery(document).attr("title");
  }
  ga("send", "event", "Forms", FormName, "Label", galabel);
  if (downloadButton.length > 0) {
    let a = document.createElement("a");
    a.href = downloadButton.attr("href");
    a.download = downloadButton.attr("download");
    a.target = "_blank";
    document.body.appendChild(a);
    setTimeout(function () {
      a.click();
      document.body.removeChild(a);
    }, 2000);
  }
}
function cf7ErrorHandler(formDomClass, formId, message) {
  let formBlock = jQuery("#" + formDomClass);
  let errrorBlock = formBlock
    .closest(".syncari-form-action-block")
    .find(".syncari-form-error-block");
  if (errrorBlock.length > 0) {
    formBlock.find(".wpcf7-response-output.wpcf7-display-none").remove();
    errrorBlock.html(message);
    errrorBlock.removeClass("d-none");
  }
  if (formBlock.closest(".hero-email-input-wrapper").length > 0) {
    formBlock
      .closest(".hero-email-input-wrapper")
      .addClass("error-border-container");
  }
}
document.addEventListener(
  "wpcf7mailsent",
  function (event) {
    console.log(event);
    cf7SuccessHandler(
      event.detail.id,
      event.detail.contactFormId,
      event.detail.apiResponse.message
    );
  },
  false
);
document.addEventListener(
  "wpcf7invalid",
  function (event) {
    cf7ErrorHandler(
      event.detail.id,
      event.detail.contactFormId,
      event.detail.apiResponse.message
    );
    return false;
  },
  false
);
